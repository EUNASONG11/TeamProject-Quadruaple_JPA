plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.green'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // redis 에 데이터를 저장할 때 기본적으로 jdk 직렬화를 사용하는데, 이는 비효율적이며
    // 메모리를 많이 차지할 수 있음.
    // 그래서 jackson 직렬화를 적용하면 json 형식으로 저장되면서 메모리 사용량 절약 가능
// //    implementation 'com.fasterxml.jackson.core:jackson-databind'
    // redis 의 livereload , restart 의 devtools 설정을 위해 활성화
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // redis 의 store-type 설정 때문에 활성화
    developmentOnly 'org.springframework.session:spring-session-data-redis'
    // redis 설정
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // cache 설정
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    // redis 에 데이터를 저장할 때 기본적으로 jdk 직렬화를 사용하는데, 이는 비효율적이며
    // 메모리를 많이 차지할 수 있음.
    // 그래서 jackson 직렬화를 적용하면 json 형식으로 저장되면서 메모리 사용량 절약 가능
// //    implementation 'com.fasterxml.jackson.core:jackson-databind'
    // redis 의 livereload , restart 의 devtools 설정을 위해 활성화
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // redis 의 store-type 설정 때문에 활성화
    developmentOnly 'org.springframework.session:spring-session-data-redis'

    // api rate
    implementation 'com.bucket4j:bucket4j-core:8.10.1'
    // .env
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
    // 유효성 검사 라이브러리 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //JDBC Log
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    //jwt 추가
    implementation 'io.jsonwebtoken:jjwt:0.12.6'
    //swagger 라이브러리 추가
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    //OAuth2 라이브러리 추가
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // https://mvnrepository.com/artifact/me.paulschwarz/spring-dotenv
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'

    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // model 객체 stream 매핑
    implementation 'org.modelmapper:modelmapper:3.1.1'

    // templates - html 불러오는 gradle
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // web socket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    compileOnly 'jakarta.websocket:jakarta.websocket-api:2.2.0'

    // Database
    runtimeOnly 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // spring data jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // QR code
    implementation 'com.google.zxing:core:3.5.3'
    implementation 'com.google.zxing:javase:3.5.3'


    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
